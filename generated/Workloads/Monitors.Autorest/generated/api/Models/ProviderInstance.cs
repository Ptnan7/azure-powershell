// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.Extensions;

    /// <summary>A provider instance associated with SAP monitor.</summary>
    public partial class ProviderInstance :
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstance,
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.ProxyResource();

        /// <summary>Error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public string ErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorCode; }

        /// <summary>Error details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IErrorDetails> ErrorDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorDetail; }

        /// <summary>Inner error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public string ErrorInnerError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorInnerError; }

        /// <summary>Error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public string ErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorMessage; }

        /// <summary>Error target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public string ErrorTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorTarget; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IUserAssignedServiceIdentity _identity;

        /// <summary>[currently not in use] Managed service identity(user assigned identities)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IUserAssignedServiceIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.UserAssignedServiceIdentity()); set => this._identity = value; }

        /// <summary>Type of manage identity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.FormatTable(Index = 4)]
        public string IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IUserAssignedServiceIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IUserAssignedServiceIdentityInternal)Identity).Type = value ?? null; }

        /// <summary>User assigned identities dictionary</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IUserAssignedServiceIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IUserAssignedServiceIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Internal Acessors for Error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesErrors Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceInternal.Error { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).Error = value ?? null /* model class */; }

        /// <summary>Internal Acessors for ErrorCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceInternal.ErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorCode = value ?? null; }

        /// <summary>Internal Acessors for ErrorDetail</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IErrorDetails> Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceInternal.ErrorDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorDetail = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for ErrorInnerError</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceInternal.ErrorInnerError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorInnerError; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorInnerError = value ?? null; }

        /// <summary>Internal Acessors for ErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceInternal.ErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorMessage = value ?? null; }

        /// <summary>Internal Acessors for ErrorTarget</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceInternal.ErrorTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ErrorTarget = value ?? null; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IUserAssignedServiceIdentity Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.UserAssignedServiceIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceProperties Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.ProviderInstanceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ProvisioningState = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).Id = value ?? null; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).Name = value ?? null; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemData = value ?? null /* model class */; }

        /// <summary>Internal Acessors for SystemDataCreatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal.SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for SystemDataCreatedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal.SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>Internal Acessors for SystemDataCreatedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal.SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType = value ?? null; }

        /// <summary>Internal Acessors for SystemDataLastModifiedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal.SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for SystemDataLastModifiedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal.SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>Internal Acessors for SystemDataLastModifiedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal.SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).Type = value ?? null; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.FormatTable(Index = 0)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceProperties _property;

        /// <summary>Provider Instance properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.ProviderInstanceProperties()); set => this._property = value; }

        /// <summary>Defines the provider specific properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderSpecificProperties ProviderSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ProviderSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ProviderSetting = value ?? null /* model class */; }

        /// <summary>State of provisioning of the provider instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.FormatTable(Index = 2)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.FormatTable(Index = 1)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemData = value ?? null /* model class */; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt; }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt; }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Origin(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.DoNotFormat]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="ProviderInstance" /> instance.</summary>
        public ProviderInstance()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// A provider instance associated with SAP monitor.
    public partial interface IProviderInstance :
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProxyResource
    {
        /// <summary>Error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorCode { get;  }
        /// <summary>Error details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Error details.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IErrorDetails) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IErrorDetails> ErrorDetail { get;  }
        /// <summary>Inner error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Inner error message.",
        SerializedName = @"innerError",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorInnerError { get;  }
        /// <summary>Error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorMessage { get;  }
        /// <summary>Error target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Error target.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorTarget { get;  }
        /// <summary>Type of manage identity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of manage identity",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PSArgumentCompleterAttribute("None", "UserAssigned")]
        string IdentityType { get; set; }
        /// <summary>User assigned identities dictionary</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User assigned identities dictionary",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Defines the provider specific properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Defines the provider specific properties.",
        SerializedName = @"providerSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderSpecificProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderSpecificProperties ProviderSetting { get; set; }
        /// <summary>State of provisioning of the provider instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"State of provisioning of the provider instance",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PSArgumentCompleterAttribute("Accepted", "Creating", "Updating", "Failed", "Succeeded", "Deleting", "Migrating")]
        string ProvisioningState { get;  }

    }
    /// A provider instance associated with SAP monitor.
    internal partial interface IProviderInstanceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProxyResourceInternal
    {
        /// <summary>Defines the provider instance errors.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstancePropertiesErrors Error { get; set; }
        /// <summary>Error code.</summary>
        string ErrorCode { get; set; }
        /// <summary>Error details.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IErrorDetails> ErrorDetail { get; set; }
        /// <summary>Inner error message.</summary>
        string ErrorInnerError { get; set; }
        /// <summary>Error message.</summary>
        string ErrorMessage { get; set; }
        /// <summary>Error target.</summary>
        string ErrorTarget { get; set; }
        /// <summary>[currently not in use] Managed service identity(user assigned identities)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IUserAssignedServiceIdentity Identity { get; set; }
        /// <summary>Type of manage identity</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PSArgumentCompleterAttribute("None", "UserAssigned")]
        string IdentityType { get; set; }
        /// <summary>User assigned identities dictionary</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Provider Instance properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderInstanceProperties Property { get; set; }
        /// <summary>Defines the provider specific properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.Models.IProviderSpecificProperties ProviderSetting { get; set; }
        /// <summary>State of provisioning of the provider instance</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Workloads.Monitors.PSArgumentCompleterAttribute("Accepted", "Creating", "Updating", "Failed", "Succeeded", "Deleting", "Migrating")]
        string ProvisioningState { get; set; }

    }
}