// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Extensions;

    /// <summary>Appliances definition.</summary>
    public partial class Appliance :
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliance,
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IApplianceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.TrackedResource();

        /// <summary>Represents a supported Fabric/Infra. (AKSEdge etc...).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string Distro { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).Distro; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).Distro = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IIdentity _identity;

        /// <summary>Identity for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Identity()); set => this._identity = value; }

        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IIdentityInternal)Identity).PrincipalId; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IIdentityInternal)Identity).TenantId; }

        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IIdentityInternal)Identity).Type = value ?? null; }

        /// <summary>Information about the connected appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string InfrastructureConfigProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).InfrastructureConfigProvider; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).InfrastructureConfigProvider = value ?? null; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.FormatTable(Index = 1)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ITrackedResourceInternal)__trackedResource).Location = value ?? null; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IIdentity Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IApplianceInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Identity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IApplianceInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IIdentityInternal)Identity).PrincipalId = value ?? null; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IApplianceInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IIdentityInternal)Identity).TenantId = value ?? null; }

        /// <summary>Internal Acessors for InfrastructureConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInfrastructureConfig Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IApplianceInternal.InfrastructureConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).InfrastructureConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).InfrastructureConfig = value ?? null /* model class */; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IApplianceProperties Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IApplianceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ApplianceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IApplianceInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).ProvisioningState = value ?? null; }

        /// <summary>Internal Acessors for Status</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IApplianceInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).Status = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).Id = value ?? null; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).Name = value ?? null; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemData = value ?? null /* model class */; }

        /// <summary>Internal Acessors for SystemDataCreatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal.SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for SystemDataCreatedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal.SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>Internal Acessors for SystemDataCreatedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal.SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? null; }

        /// <summary>Internal Acessors for SystemDataLastModifiedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal.SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for SystemDataLastModifiedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal.SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>Internal Acessors for SystemDataLastModifiedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal.SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).Type = value ?? null; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.FormatTable(Index = 0)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IApplianceProperties _property;

        /// <summary>The set of properties specific to an Appliance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IApplianceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ApplianceProperties()); set => this._property = value; }

        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.FormatTable(Index = 2)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// Certificates pair used to download MSI certificate from HIS. Can only be set once.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string PublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).PublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).PublicKey = value ?? null; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.FormatTable(Index = 3)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Appliance’s health and state of connection to on-prem</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).Status; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemData = value ?? null /* model class */; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataCreatedAt; }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataCreatedBy; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataCreatedByType; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IResourceInternal)__trackedResource).Type; }

        /// <summary>Version of the Appliance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.DoNotFormat]
        public string Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInternal)Property).Version = value ?? null; }

        /// <summary>Creates an new <see cref="Appliance" /> instance.</summary>
        public Appliance()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Appliances definition.
    public partial interface IAppliance :
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ITrackedResource
    {
        /// <summary>Represents a supported Fabric/Infra. (AKSEdge etc...).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Represents a supported Fabric/Infra. (AKSEdge etc...).",
        SerializedName = @"distro",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PSArgumentCompleterAttribute("AKSEdge")]
        string Distro { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The principal ID of resource identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The identity type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PSArgumentCompleterAttribute("SystemAssigned", "None")]
        string IdentityType { get; set; }
        /// <summary>Information about the connected appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Information about the connected appliance.",
        SerializedName = @"provider",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PSArgumentCompleterAttribute("VMWare", "HCI", "SCVMM", "KubeVirt", "OpenStack")]
        string InfrastructureConfigProvider { get; set; }
        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The current deployment or provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// Certificates pair used to download MSI certificate from HIS. Can only be set once.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Certificates pair used to download MSI certificate from HIS. Can only be set once.",
        SerializedName = @"publicKey",
        PossibleTypes = new [] { typeof(string) })]
        string PublicKey { get; set; }
        /// <summary>Appliance’s health and state of connection to on-prem</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Appliance’s health and state of connection to on-prem",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PSArgumentCompleterAttribute("WaitingForHeartbeat", "Validating", "Connecting", "Connected", "Running", "PreparingForUpgrade", "UpgradePrerequisitesCompleted", "PreUpgrade", "UpgradingKVAIO", "WaitingForKVAIO", "ImagePending", "ImageProvisioning", "ImageProvisioned", "ImageDownloading", "ImageDownloaded", "ImageDeprovisioning", "ImageUnknown", "UpdatingCloudOperator", "WaitingForCloudOperator", "UpdatingCAPI", "UpdatingCluster", "PostUpgrade", "UpgradeComplete", "UpgradeClusterExtensionFailedToDelete", "UpgradeFailed", "Offline", "None")]
        string Status { get;  }
        /// <summary>Version of the Appliance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Version of the Appliance",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// Appliances definition.
    internal partial interface IApplianceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.ITrackedResourceInternal
    {
        /// <summary>Represents a supported Fabric/Infra. (AKSEdge etc...).</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PSArgumentCompleterAttribute("AKSEdge")]
        string Distro { get; set; }
        /// <summary>Identity for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IIdentity Identity { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>The identity type.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PSArgumentCompleterAttribute("SystemAssigned", "None")]
        string IdentityType { get; set; }
        /// <summary>Contains infrastructure information about the Appliance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IAppliancePropertiesInfrastructureConfig InfrastructureConfig { get; set; }
        /// <summary>Information about the connected appliance.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PSArgumentCompleterAttribute("VMWare", "HCI", "SCVMM", "KubeVirt", "OpenStack")]
        string InfrastructureConfigProvider { get; set; }
        /// <summary>The set of properties specific to an Appliance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.IApplianceProperties Property { get; set; }
        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response.
        /// </summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Certificates pair used to download MSI certificate from HIS. Can only be set once.
        /// </summary>
        string PublicKey { get; set; }
        /// <summary>Appliance’s health and state of connection to on-prem</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PSArgumentCompleterAttribute("WaitingForHeartbeat", "Validating", "Connecting", "Connected", "Running", "PreparingForUpgrade", "UpgradePrerequisitesCompleted", "PreUpgrade", "UpgradingKVAIO", "WaitingForKVAIO", "ImagePending", "ImageProvisioning", "ImageProvisioned", "ImageDownloading", "ImageDownloaded", "ImageDeprovisioning", "ImageUnknown", "UpdatingCloudOperator", "WaitingForCloudOperator", "UpdatingCAPI", "UpdatingCluster", "PostUpgrade", "UpgradeComplete", "UpgradeClusterExtensionFailedToDelete", "UpgradeFailed", "Offline", "None")]
        string Status { get; set; }
        /// <summary>Version of the Appliance</summary>
        string Version { get; set; }

    }
}